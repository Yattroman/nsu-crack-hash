plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.0'
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

subprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    configurations {
        jaxb
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.24'
        annotationProcessor 'org.projectlombok:lombok:1.18.24'

        testCompileOnly 'org.projectlombok:lombok:1.18.24'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        implementation 'org.springframework.boot:spring-boot-starter-web-services'

        implementation 'wsdl4j:wsdl4j'

        jaxb 'org.glassfish.jaxb:jaxb-xjc:4.0.1'
        jaxb 'org.glassfish.jaxb:jaxb-runtime:4.0.0'

        implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.0'
        implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'

        implementation 'com.fasterxml.jackson.module:jackson-module-jaxb-annotations:2.1.4'

        implementation 'commons-codec:commons-codec:1.15'

        implementation 'org.apache.commons:commons-math3:3.6.1'
        implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'

        implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.6.1'
    }

    test {
        useJUnitPlatform()
    }

    sourceSets {
        main {
            java {
                srcDir 'src/main/java'
                srcDir 'build/generated-sources/jaxb'
            }
        }
    }

    task genJaxb {
        ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
        ext.classesDir = "${buildDir}/classes/java/main"
        ext.schemaDir = "src/main/resources/static/schema"

        outputs.dir sourcesDir

        doLast() {
            project.ant {
                taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                        classpath: configurations.jaxb.asPath

                mkdir(dir: sourcesDir)
                mkdir(dir: classesDir)

                xjc(destdir: sourcesDir) {
                    schema(dir: schemaDir, includes: "**/*.xsd")
                    arg(value: "-wsdl")
                    produces(dir: sourcesDir, includes: "**/*.java")
                }

                javac(destdir: classesDir, source: 1.8, target: 1.8,
                        debug: true, debugLevel: "lines,vars,source",
                        classPath: configurations.jaxb.asPath) {
                    src(path: sourcesDir)
                    include(name: "**/*.java")
                    include(name: "*.java")
                }

                copy(todir: classesDir) {
                    fileset(dir: sourcesDir, erroronmissingdir: false) {
                        exclude(name: "**/*.java")
                    }
                }
            }
        }
    }

    compileJava.dependsOn genJaxb
}

allprojects {
    group = 'ru.nsu.yattroman.crack-hash'
    version = '1.0'

    repositories {
        mavenCentral()
    }

    java.sourceCompatibility(JavaVersion.VERSION_17)
    java.targetCompatibility(JavaVersion.VERSION_17)
}
